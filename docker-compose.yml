services:
  # Interface Homme-Machine en HTML/CSS/JS/PHP
  ihm:
    build: ./ihm
    volumes:
      - ./ihm:/var/www/html
      - /var/log/apache2/app:/var/log/apache2/
    ports:
      - "8080:80"
    networks:
      - calc_net

  # Calculateur en Python
  calc:
    build: ./calc
    volumes:
      - ./calc/src:/usr/src/app/src
    ports:
      - "8081:80"
    networks:
      - calc_net

  # Interface BDD en C#
  int_db:
    image: int_db
    build: 
      context: ./int_db/
      dockerfile: int_db/Dockerfile
    ports:
      - "8082:80"
    networks:
      - calc_net

  # Base de données MySQL
  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: calc
    ports:
      - "3306:3306"
    networks:
      - calc_net

  # Serveur Minio
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=password
      - MINIO_ACCESS_KEY=minio
      - MINIO_SECRET_KEY=password
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000" # Port d'accès aux données (API)
      - "9001:9001" # Port d'accès à l'interface web
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - calc_net

  # Bucket S3 pour Minio
  bucket_s3:
    image: minio/mc
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add myminio http://minio:9000 minio password;
      /usr/bin/mc mb myminio/bucket-s3;
      /usr/bin/mc policy set download myminio/bucket-s3;
      exit 0;
      "
    depends_on:
      - minio
    networks:
      - calc_net

networks:
  calc_net:
    driver: bridge

volumes:
  minio_data: